<div id="comment">
  <span class="text-xl">Leave a comment ðŸ’¬</span>
  <div id="tcomment"></div>

  <script is:inline data-cfasync="false">
    /** Create a progress indicator
     *  at the top */
    function createProgressBar() {
      // Create the main container div
      const progressContainer = document.createElement("div");
      progressContainer.className =
        "progress-container fixed top-0 z-10 h-1 w-full bg-skin-fill";

      // Create the progress bar div
      const progressBar = document.createElement("div");
      progressBar.className = "progress-bar h-1 w-0 bg-skin-accent";
      progressBar.id = "myBar";

      // Append the progress bar to the progress container
      progressContainer.appendChild(progressBar);

      // Append the progress container to the document body or any other desired parent element
      document.body.appendChild(progressContainer);
    }
    createProgressBar();

    /** Update the progress bar
     *  when user scrolls */
    function updateScrollProgress() {
      const winScroll =
        document.body.scrollTop || document.documentElement.scrollTop;
      const height =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;
      const scrolled = (winScroll / height) * 100;
      if (document) {
        const myBar = document.getElementById("myBar");
        if (myBar) {
          myBar.style.width = scrolled + "%";
        }
      }
    }
    document.addEventListener("scroll", updateScrollProgress);

    /** Attaches links to headings in the document,
     *  allowing sharing of sections easily */
    function addHeadingLinks() {
      const headings = Array.from(
        document.querySelectorAll("h2, h3, h4, h5, h6")
      );
      for (const heading of headings) {
        heading.classList.add("group");
        const link = document.createElement("a");
        link.className =
          "heading-link ml-2 opacity-0 group-hover:opacity-100 focus:opacity-100";
        link.href = "#" + heading.id;

        const span = document.createElement("span");
        span.ariaHidden = "true";
        span.innerText = "#";
        link.appendChild(span);
        heading.appendChild(link);
      }
    }
    addHeadingLinks();

    /** Attaches copy buttons to code blocks in the document,
     * allowing users to copy code easily. */
    function attachCopyButtons() {
      const copyButtonLabel = "Copy";
      const codeBlocks = Array.from(document.querySelectorAll("pre"));

      for (const codeBlock of codeBlocks) {
        const wrapper = document.createElement("div");
        wrapper.style.position = "relative";

        const copyButton = document.createElement("button");
        copyButton.className =
          "copy-code absolute right-3 -top-3 rounded bg-skin-card px-2 py-1 text-xs leading-4 text-skin-base font-medium";
        copyButton.innerHTML = copyButtonLabel;
        codeBlock.setAttribute("tabindex", "0");
        codeBlock.appendChild(copyButton);

        // wrap codebock with relative parent element
        codeBlock?.parentNode?.insertBefore(wrapper, codeBlock);
        wrapper.appendChild(codeBlock);

        copyButton.addEventListener("click", async () => {
          await copyCode(codeBlock, copyButton);
        });
      }

      async function copyCode(block, button) {
        const code = block.querySelector("code");
        const text = code?.innerText;

        await navigator.clipboard.writeText(text ?? "");

        // visual feedback that task is completed
        button.innerText = "Copied";

        setTimeout(() => {
          button.innerText = copyButtonLabel;
        }, 700);
      }
    }
    attachCopyButtons();

    /** Scrolls the document to the top when
     * the "Back to Top" button is clicked. */
    function backToTop() {
      document.querySelector("#back-to-top")?.addEventListener("click", () => {
        document.body.scrollTop = 0; // For Safari
        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
      });
    }
    backToTop();
  </script>
  <script data-cfasync="false">
    document.addEventListener("astro:page-load", () => {
      function loadTwikoo() {
        const commentsContainer = document.getElementById("tcomment");
        if (commentsContainer) {
          const script = document.createElement("script");
          script.src =
            "https://cdnjs.cloudflare.com/ajax/libs/twikoo/1.6.39/twikoo.all.min.js";
          script.defer = true;
          script.integrity =
            "sha512-U1Og3lLG7ogYjf6sIkuBcLVjy9UNTPGmHsK6CTX2fQUsCh/As6GbDPOEp6v87C1W4Ewl7OnRmbZZWp1dSl/wGg==";
          script.crossOrigin = "anonymous";
          script.referrerPolicy = "no-referrer";

          script.onload = () => {
            const initScript = document.createElement("script");
            initScript.innerHTML = `
            twikoo.init({
              envId: "https://comments.haobin.liang.london",
              el: "#tcomment",
              lang: "en-GB",
            });
          `;
            document.body.appendChild(initScript);
          };
          document.body.appendChild(script);
        }
      }
      loadTwikoo();
    });
  </script>
</div>

<style>
  #comment {
    @apply mx-auto w-full max-w-3xl pb-12;
  }
</style>
